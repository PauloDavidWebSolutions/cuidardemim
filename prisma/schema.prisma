generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String  @id @default(cuid())
  email     String  @unique
  firstName String
  lastName  String
  phone     String
  imageUrl  String?

  clerkUserId      String  @unique
  stripeCustomerId String? @unique

  role     Role      @default(USER)
  provider Provider?

  appointment Appointment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Service {
  id          String  @id @default(cuid())
  name        String
  price       Int
  imageUrl    String?
  description String?

  calEventId   Int    @unique
  calEventSlug String @unique

  appointment Appointment[]
  provider    Provider[]

  durationId String
  duration   Duration @relation(fields: [durationId], references: [id])

  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id          String  @id @default(cuid())
  name        String
  imageUrl    String?
  description String?

  service Service[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Duration {
  id       String @id @default(cuid())
  name     String
  duration Int

  service Service[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Appointment {
  id            String   @id @default(cuid())
  startDateTime DateTime
  endDateTime   DateTime
  calBookingId  Int      @unique

  notes     String?
  paymentId String?

  user   User   @relation(fields: [userId], references: [clerkUserId])
  userId String

  service   Service @relation(fields: [serviceId], references: [id])
  serviceId String

  provider   Provider @relation(fields: [providerId], references: [id])
  providerId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Provider {
  id          String  @id @default(cuid())
  imageUrl    String?
  jobTitle    String?
  description String?

  // calUserId   String @unique
  calUsername String @unique

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique

  service     Service[]
  appointment Appointment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
  PROVIDER
}

enum AppointmentStatus {
  PENDING
  CONFIRMED
  CANCELLED
}
